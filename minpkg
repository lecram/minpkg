#! /bin/sh

help () {
    printf "usage: $0 COMMAND [ARGS]\n"
    printf "available commands:\n"
    printf "  init list add del raise to from match\n"
}

fail () {
    printf "$1\n" >&2
    exit 1
}

assert_readable () {
    if [ ! -r "$1" ]
    then
        fail "you don't have read permissions on $1"
    fi
}

assert_writable () {
    if [ ! -w "$1" ]
    then
        fail "you don't have write permissions on $1"
    fi
}

pkg_init () {
    if [ "$#" -ne 1 ]
    then
        fail "usage: $0 init ROOT"
    fi

    if [ ! -d "$1" ]
    then
        fail "$1 is not a directory"
    fi

    assert_writable "$1"

    if [ -d "$1/etc/pkg/list" ]
    then
        fail "$1 is already initialized"
    fi

    mkdir -p "$1/etc/pkg/list"
    touch "$1/etc/pkg/PACKAGES"
    touch "$1/etc/pkg/CONFLICT"
}

pkg_list () {
    if [ "$#" -ne 1 ]
    then
        fail "usage: $0 list ROOT"
    fi

    plist="$1/etc/pkg/PACKAGES"

    assert_readable "$1"

    if [ -f "$plist" ]
    then
        cat "$plist"
        return 0
    else
        fail "unable to find package information on $1"
    fi
}

pkg_add () {
    if [ "$#" -ne 2 ]
    then
        fail "usage: $0 add ROOT PKGFILE"
    fi

    assert_writable "$1"

    if [ ! -f "$2" ]
    then
        fail "file not found: $2"
    fi

    pkgid=`basename "$2" .tgz`
    flist="$1/etc/pkg/list/$pkgid"

    if [ -f "$flist" ]
    then
        fail "$pkgid is already installed on $1"
    fi

    plist="$1/etc/pkg/PACKAGES"
    confl="$1/etc/pkg/CONFLICT"

    pkg_to "$2" > "$flist"

    add=0
    mod=0
    while read path
    do
        if [ -e "$1/$path" ]
        then
            from=`pkg_from "$1" "$path" 2> /dev/null`
            if [ $? -eq 0 ]
            then
                mv "$1/$path" "$1/$path.$from"
                if ! grep -qF "$path" "$confl"
                then
                    printf "$path\n" >> "$confl"
                fi
                printf "masked %s %s\n" "$from" "$path" >&2
                mod=$((mod+1))
            else
                add=$((add+1))
            fi
        else
            add=$((add+1))
        fi
    done < "$flist"

    tar -x -z -C "$1" -f "$2"

    printf "$pkgid\n" >> "$plist"

    printf "added %d new files\n" "$add"
    if [ $mod -ne 0 ]
    then
        printf "modified %d files\n" "$mod"
    fi
}

pkg_del () {
    if [ "$#" -ne 2 ]
    then
        fail "usage: $0 del ROOT PKGID"
    fi

    assert_writable "$1"

    pkgid=`basename "$2" .tgz`
    flist="$1/etc/pkg/list/$pkgid"

    if [ ! -f "$flist" ]
    then
        fail "$pkgid is not installed on $1"
    fi

    plist="$1/etc/pkg/PACKAGES"
    confl="$1/etc/pkg/CONFLICT"

    sub=0
    mod=0
    hid=0
    match="$1/etc/pkg/MATCH"
    while read path
    do
        if grep -qF "$path" "$confl"
        then
            pkg_match "$1" "$path" > "$match"
            count=`wc -l < "$match"`
            if [ $count -le 2 ]
            then
                sed "\\:^$path\$:d" "$confl" > "$confl.tmp"
                mv "$confl.tmp" "$confl"
            fi
            from=`sed -n '1p' "$match"`
            if [ "$from" = "$pkgid" ]
            then
                below=`sed -n '2p' "$match"`
                mv "$1/$path.$below" "$1/$path"
                printf "unmasked %s %s\n" "$below" "$path" >&2
                mod=$((mod+1))
            else
                rm "$1/$path.$pkgid"
                hid=$((hid+1))
            fi
        else
            rm "$1/$path"
            dirpath=`dirname "$1/$path"`
            while rmdir "$dirpath" 2> /dev/null
            do
                dirpath=`dirname "$dirpath"`
            done
            sub=$((sub+1))
        fi
    done < "$flist"
    rm -f "$match"

    rm "$flist"

    sed -n "/^$pkgid\$/!p" "$plist" > "$plist.tmp"
    mv "$plist.tmp" "$plist"

    printf "removed %d files\n" "$sub"
    if [ $hid -ne 0 ]
    then
        printf "removed %d masked files\n" "$hid"
    fi
    if [ $mod -ne 0 ]
    then
        printf "unmasked %d files\n" "$mod"
    fi
}

pkg_to () {
    if [ "$#" -ne 1 ]
    then
        fail "usage: $0 to PKGFILE"
    fi

    if [ ! -f "$1" ]
    then
        fail "file not found: $1"
    fi

    tar -t -z -f "$1" | grep -v '/$'
}

pkg_from () {
    if [ "$#" -ne 2 ]
    then
        fail "usage: $0 from ROOT PATH"
    fi

    assert_readable "$1"

    plist="$1/etc/pkg/PACKAGES"

    if [ ! -f "$plist" ]
    then
        fail "unable to find package information on $1"
    fi

    if [ ! -e "$1/$2" ]
    then
        fail "$2 does not exist on $1"
    fi

    tac "$plist" | while read pkg
    do
        if grep -qF "$2" "$1/etc/pkg/list/$pkg"
        then
            printf "$pkg\n"
            exit 1
        fi
    done

    if [ $? -eq 0 ]
    then
        fail "$2 was not installed from package"
    fi
}

pkg_match () {
    if [ "$#" -ne 2 ]
    then
        fail "usage: $0 match ROOT PATH"
    fi

    assert_readable "$1"

    plist="$1/etc/pkg/PACKAGES"

    if [ ! -f "$plist" ]
    then
        fail "unable to find package information on $1"
    fi

    # the shortcut below is not working from del for unknown reasons
    #~ if [ ! -e "$1/$2" ]
    #~ then
        #~ fail "$1/$2 does not seem to exist"
    #~ fi

    tac "$plist" | while read pkg
    do
        if grep -qF "$2" "$1/etc/pkg/list/$pkg"
        then
            printf "$pkg\n"
        fi
    done
}

pkg_raise () {
    if [ "$#" -ne 2 ]
    then
        fail "usage: $0 raise ROOT PKGID" >&2
    fi

    assert_writable "$1"

    pkgid=`basename "$2" .tgz`
    flist="$1/etc/pkg/list/$pkgid"

    if [ ! -f "$flist" ]
    then
        fail "$pkgid is not installed on $1"
    fi

    plist="$1/etc/pkg/PACKAGES"
    confl="$1/etc/pkg/CONFLICT"

    mod=0
    raise="$1/etc/pkg/RAISE"
    cat "$flist" "$confl" | sort | uniq -d > "$raise"
    while read path
    do
        from=`pkg_from "$1" "$path"`
        if [ "$from" != "$pkgid" ]
        then
            mv "$1/$path" "$1/$path.$from"
            printf "masked %s %s\n" "$from" "$path" >&2
            mv "$1/$path.$pkgid" "$1/$path"
            printf "unmasked %s %s\n" "$pkgid" "$path" >&2
            mod=$((mod+1))
        fi
    done < "$raise"
    rm "$raise"

    sed -n "/^$pkgid\$/!p" "$plist" > "$plist.tmp"
    mv "$plist.tmp" "$plist"
    printf "$pkgid\n" >> "$plist"

    printf "modified %d files\n" "$mod"
}

cmd="$1"
shift

case "$cmd" in
    i|init)   pkg_init $@ ;;
    l|list)   pkg_list $@ ;;
    a|add)    pkg_add $@ ;;
    d|del)    pkg_del $@ ;;
    r|raise)  pkg_raise $@ ;;
    t|to)     pkg_to $@ ;;
    f|from)   pkg_from $@ ;;
    m|match)  pkg_match $@ ;;
    *)        help >&2 && exit 1
esac
